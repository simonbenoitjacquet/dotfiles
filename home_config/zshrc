# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# XDG - set defaults as they may not be set
# See https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
# and https://wiki.archlinux.org/title/XDG_Base_Directory#Support
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# Set OMZ installation location.
ZSH=$HOME/.oh-my-zsh
DISABLE_UPDATE_PROMPT=true
# Set zsh theme to be powerlevel10k with patched fontawesome symbols.
POWERLEVEL9K_MODE='nerdfont-complete'
ZSH_THEME='powerlevel10k/powerlevel10k'
export SHELL=$(which zsh)

# Use a more universal theme for terminals without special font support.
# https://apple.stackexchange.com/a/118500
# https://stackoverflow.com/a/5203740/3344451
_p10k_incompatible_emulators=(
  Apple_Terminal
  vscode
)
if [[ -n "${_p10k_incompatible_emulators[(r)$TERM_PROGRAM]}" ]]; then
  ZSH_THEME='robbyrussell'
fi

# These are the OMZ plugins that we'll install.
plugins=(
  git
  brew
  history-substring-search
  colored-man-pages
  vi-mode
  git-auto-fetch
  fd
  ripgrep
  fast-syntax-highlighting
  fzf
)

# Returns whether the given command is executable or aliased.
_has() {
  return $(whence $1 >/dev/null)
}

# Prepend a directory to path, if it exists and isn't already in the path.
_prepend_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($1 $path);
  fi
}

# Append a directory to path, if it exists and isn't already in the path.
_append_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($path $1);
  fi
}

# Add common bin directories to path.
_prepend_to_path /usr/local/bin
_prepend_to_path /usr/local/sbin
_prepend_to_path $HOME/.local/bin

# Set key bindings.
bindkey -v # vi mode for shell
bindkey -e # enable C-x-e for shell editor
# Key bindings for history search.
bindkey '\e[3~' delete-char
bindkey '^R' history-incremental-search-backward
# Explicity bind home and end keys (in case of terminal compatibility issues)
bindkey "${terminfo[khome]}" beginning-of-line
bindkey "${terminfo[kend]}" end-of-line

# Decrease delay in entering normal mode in shell.
# https://www.johnhawthorn.com/2012/09/vi-escape-delays/
KEYTIMEOUT=1

setopt correct
setopt rmstarsilent # silence rm * confirmation

# Add path shortcuts
alias cdoc="/mnt/c/Users/simon/Documents"
alias cunam="/mnt/c/Users/simon/Documents/unamur"

# Add light and dark themes
alias light="gsettings set org.gnome.desktop.interface gtk-theme Adwaita"
alias dark="gsettings set org.gnome.desktop.interface gtk-theme Adwaita-dark"

# Set Vim as the default editor.
export EDITOR="vim"
# Use Neovim instead of classic Vim (if available)
# NVIM_APPIMAGE=$HOME/nvim.appimage
# if [ -f "$NVIM_APPIMAGE" ]; then
#   alias nvim="$NVIM_APPIMAGE"
# fi
if _has nvim; then
  alias vim="nvim"
  alias vi="nvim"
  export EDITOR="nvim"
fi

# Alias for python 
if _has python3; then
    alias python="python3"
    alias pip="pip3"
fi

if _has zathura; then
    alias z="zathura"
fi

# Use 256 color for tmux.
alias tmux="TERM=screen-256color-bce tmux"
# Attempt to take over existing sessions before creating a new tmux session.
TMUX_DEFAULT_SESSION="tmux"
alias t="tmux a -d -t ${TMUX_DEFAULT_SESSION} 2> /dev/null || tmux new -s ${TMUX_DEFAULT_SESSION}"
if [[ -z "$TMUX" ]]; then
  # Switch to xterm if we're in a tmux session.
  TERM="xterm-256color"
fi

if _has fdfind; then
    alias fd="fdfind"
fi

if _has rg; then
  export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
fi

if _has bat; then
  # Export theme for http://github.com/sharkdp/bat.
  export BAT_THEME="Solarized (dark)"
fi

# Configure fzf (if available).
if _has fzf; then
  if _has fd; then
    DISABLE_FZF_KEY_BINDINGS="false"
    # Use fd for fzf.
    FZF_DEFAULT_COMMAND='$(whence fd) --type f --follow --hidden --ignore-file $HOME/.gitignore'
    FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    # Use fd for fzf directory search.
    FZF_ALT_C_COMMAND='$(whence fd) --type d --color never --hidden --ignore-file $HOME/.gitignore'
  fi

  # Display source tree and file preview for CTRL-T and ALT-C.
  if _has tree; then
    # Show subdir tree for directories.
    FZF_ALT_C_OPTS="--preview '(exa --tree --color=always {} || tree -C {}) | head -200'"
  fi

  # Bind alt-j/k/d/u to moving the preview window for fzf.
  FZF_DEFAULT_OPTS="--bind tab:down,btab:up,alt-k:preview-up,alt-j:preview-down,alt-u:preview-page-up,alt-d:preview-page-down"

  # Show previews for files and directories.
  # Having `bat` or `highlight` (or any of the other binaries below) installed
  # enables syntax highlighting.
  FZF_CTRL_T_OPTS="--preview '(bat --style=numbers --color=always {} || highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -200'"

  # Some basic fzf-tab configs.
  plugins+=(fzf-tab)
  zstyle ':fzf-tab:complete:cd:*' fzf-preview '(exa --tree --color=always $realpath || tree -C $realpath) 2> /dev/null'
  zstyle ':completion:*:descriptions' format '[%d]'
  zstyle ':fzf-tab:*' switch-group ',' '.'
fi

# Source Oh-My-ZSH. All theme and plugin configs must come beforehand. This may have side-effects.
source $ZSH/oh-my-zsh.sh

# Alias `exa` as default `ls` command (if available).
# This must come after OMZ. (The library overwrites this alias.)
if _has exa; then
# need to disable in order for exa ls alias to work
DISABLE_LS_COLORS="true"
  alias ls="exa --icons"
  alias ll="exa -l -g --icons"
  alias lt="exa --tree --icons -a -I '.git|__pycache__|.mypy_cache|.ipynb_checkpoints'"
fi

# Source fzf scripts via via local installation.
# OMZ overwrites some of these scripts, so this must come afterwards.
fzf_paths=(
  "${HOME}/.vim/plugged/fzf"
  "${HOME}/.local/share/nvim/site/pack/packer/start/fzf"
)
for fzf_path in "${fzf_paths[@]}"; do
  if [ -d $fzf_path ]; then
    _append_to_path "${fzf_path}/bin"
    # Source fzf key bindings and auto-completion.
    source "${fzf_path}/shell/key-bindings.zsh"
    source "${fzf_path}/shell/completion.zsh"
    break
  fi
done

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Source local zshrc configs.
if [[ -f ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi

unsetopt BEEP

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/simon/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/simon/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/simon/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/simon/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


if _has conda; then
    conda activate ml
fi

function ctrlz() { fg; zle redisplay }
zle -N ctrlz
bindkey '^z' ctrlz
